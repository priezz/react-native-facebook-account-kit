apply plugin: 'com.android.library'

def DEFAULT_COMPILE_SDK_VERSION             = 28
def DEFAULT_BUILD_TOOLS_VERSION             = "28.0.3"
def DEFAULT_MIN_SDK_VERSION                 = 21
def DEFAULT_TARGET_SDK_VERSION              = 28
def DEFAULT_SUPPORT_LIB_VERSION             = "28.0.0"
def DEFAULT_ACCOUNT_KIT_VERSION             = "5.+"


def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

def SUPPORT_LIB_VERSION = safeExtGet('supportLibVersion', DEFAULT_SUPPORT_LIB_VERSION)
def ACCOUNT_KIT_VERSION = safeExtGet('accountKitSdkVersion', DEFAULT_ACCOUNT_KIT_VERSION)


android {
    compileSdkVersion safeExtGet("compileSdkVersion", DEFAULT_COMPILE_SDK_VERSION)
    buildToolsVersion safeExtGet("buildToolsVersion", DEFAULT_BUILD_TOOLS_VERSION)

    defaultConfig {
        minSdkVersion safeExtGet("minSdkVersion", DEFAULT_MIN_SDK_VERSION)
        targetSdkVersion safeExtGet("targetSdkVersion", DEFAULT_TARGET_SDK_VERSION)
        versionCode 1
        versionName "1.0"
        // ndk {
        //     abiFilters "armeabi-v7a", "x86"
        // }

        // Optional: Specify the language(s) your app supports.
        resConfigs "en" // TODO: Load value from the parent project
    }
    lintOptions {
        abortOnError false
    }
    // buildTypes {
    //     release {
    //         minifyEnabled false
    //         proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    //     }
    // }
}

dependencies {
    implementation 'com.facebook.react:react-native:+'
    implementation "com.android.support:appcompat-v7:${SUPPORT_LIB_VERSION}"
    implementation "com.android.support:design:${SUPPORT_LIB_VERSION}"

    /// https://mvnrepository.com/artifact/com.facebook.android/account-kit-sdk
    implementation ("com.facebook.android:account-kit-sdk:${ACCOUNT_KIT_VERSION}") {
        exclude group: 'com.parse.bolts', module: 'bolts-android';
        exclude group: 'com.parse.bolts', module: 'bolts-applinks';
        exclude group: 'com.parse.bolts', module: 'bolts-tasks';
    }
}
